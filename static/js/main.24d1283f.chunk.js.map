{"version":3,"sources":["firebase/firebase.js","configs/toastConfig.jsx","firebase/firebaseDBQueries.js","providers/UserProvider.jsx","providers/DaysProvider.jsx","modules/Todo/AddToDo/AddToDo.jsx","modules/Todo/EditToDo/EditToDo.jsx","modules/Todo/Main/Calendar/MonthSwitch/MonthSwitch.jsx","modules/Todo/Main/Calendar/DateSwitch/DateSwitch.jsx","modules/Todo/Main/Calendar/Calendar.jsx","modules/Todo/Main/ToDoList/ToDoList.jsx","modules/Todo/Main/ToDoList/ToDoListFooter.jsx","modules/Todo/Main/Main.jsx","modules/Todo/ToDo/ToDo.jsx","routes/ToDoRouter.jsx","modules/Auth/PasswordReset/PasswordReset.jsx","firebase/firebaseAuthQueries.js","modules/Auth/SignIn/SignIn.jsx","modules/Auth/SignUp/SignUp.jsx","routes/AuthRouter.jsx","routes/Routes.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","db","errorToast","text","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","successToast","success","getUserDocument","uid","a","doc","get","userDocument","data","console","generateUserDocument","user","additionalData","userRef","exists","email","displayName","set","unsub","day","setTodos","collection","where","onSnapshot","snapshot","docs","map","date","id","title","todo","status","UserContext","createContext","UserProvider","props","useState","setUser","useEffect","onAuthStateChanged","userAuth","Provider","value","children","TodosContext","DaysContext","today","format","Date","DaysProvider","setDay","setTodo","AddTodo","history","useHistory","useContext","setTitle","input","setInput","setTodoCreated","className","noValidate","label","placeholder","name","required","onChange","event","target","margin","type","onClick","preventDefault","add","userId","addTodo","disabled","push","EditToDo","defaultValue","update","then","log","editTodo","MonthSwitch","currentMonth","setCurrentMonth","subMonths","addMonths","DateSwitch","selectedDate","setSelectedDate","document","querySelector","scrollIntoView","behavior","isSameDay","alignCenter","scrollToSelected","monthStart","startOfMonth","startDate","lastDayOfThisMonth","getDate","lastDayOfMonth","days","formattedDate","i","cloneDay","onDateClick","addDays","renderCells","menuStyle","Calendar","ListTodo","todos","todoStatusHandler","statusHandler","length","to","ToDoListFooter","setIsLoggedIn","signOut","Main","Container","Row","Col","xs","ToDo","deleteTodoHandler","delete","deleteTodo","redirectToMain","rows","ToDoRouter","path","component","PasswordReset","setEmail","currentTarget","sendPasswordResetEmail","catch","sendResetEmail","provider","GoogleAuthProvider","signInWithGoogleHandler","signInWithPopup","createUserWithEmailAndPasswordHandler","password","createUserWithEmailAndPassword","SignIn","setPassword","onChangeHandler","signInWithEmailAndPassword","signInWithEmailAndPasswordHandler","SignUp","setDisplayName","AuthRouter","from","Routes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"6bAcMA,G,YAAcC,IAASC,cAVC,CAC5BC,OAAQC,0CACRC,WAAYD,0CACZE,YAAaF,iFACbG,UAAWH,0BACXI,cAAeJ,sCACfK,kBAAmBL,eACnBM,MAAON,+CAKIO,EAAOV,IAASU,OAChBC,EAAYX,IAASW,YACrBC,EAAKb,EAAYY,Y,gBCfjBE,G,MAAa,SAACC,GACzBC,IAAMC,MAAMF,EAAM,CAChBG,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,MAIDC,EAAe,SAACX,GAC3BC,IAAMW,QAAQZ,EAAM,CAClBG,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KCpBRG,EAAe,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACjBD,EADiB,yCACL,MADK,gCAGOjB,EAAUmB,IAAV,gBAAuBF,IAAOG,MAHrC,cAGdC,EAHc,sCAMlBJ,OACGI,EAAaC,SAPE,gCAUpBC,QAAQlB,MAAM,sBAAd,MAVoB,yDAAH,sDAcRmB,EAAoB,uCAAG,WAAOC,EAAMC,GAAb,mBAAAR,EAAA,yDAC7BO,EAD6B,wDAG5BE,EAAU3B,EAAUmB,IAAV,gBAAuBM,EAAKR,MAHV,SAIXU,EAAQP,MAJG,iBAMpBQ,OANoB,wBAOxBC,EAAuBJ,EAAvBI,MAAOC,EAAgBL,EAAhBK,YAPiB,mBASxBH,EAAQI,IAAR,aACJD,cACAD,SACGH,IAZyB,0DAe9BH,QAAQlB,MAAM,+BAAd,MAf8B,iCAkB3BW,EAAgBS,EAAKR,MAlBM,0DAAH,wDAiEpBe,EAAQ,SAARA,EAAShC,EAAWyB,EAAMQ,EAAKC,GAkB1C,OAjBAlC,EACGmC,WAAW,SACXC,MAAM,SAAU,KAAMX,EAAKR,KAC3BmB,MAAM,OAAQ,KAAMH,GACpBI,YAAW,SAACC,GACXJ,EACEI,EAASC,KAAKC,KAAI,SAACrB,GACjB,MAAO,CACLsB,KAAMR,EACNS,GAAIvB,EAAIuB,GACRC,MAAOxB,EAAIG,OAAOqB,MAClBC,KAAMzB,EAAIG,OAAOsB,KACjBC,OAAQ1B,EAAIG,OAAOuB,eAKtB,WACLb,EAAMhC,EAAWyB,EAAMQ,EAAKC,K,OChGnBY,EAAcC,wBAAc,CAAEtB,KAAM,OAalCuB,EAXM,SAACC,GAAW,IAAD,EACNC,mBAAS,MADH,mBACvBzB,EADuB,KACjB0B,EADiB,KAQ9B,OANAC,qBAAU,WACRrD,EAAKsD,mBAAL,+BAAAnC,EAAA,MAAwB,WAAOoC,GAAP,eAAApC,EAAA,sEACHM,EAAqB8B,GADlB,OAChB7B,EADgB,OAEtB0B,EAAQ1B,GAFc,2CAAxB,yDAIC,IACI,cAACqB,EAAYS,SAAb,CAAsBC,MAAO/B,EAA7B,SAAoCwB,EAAMQ,Y,QCbtCC,EAAeX,0BACfY,EAAcZ,0BACrBa,EAAQC,YAAO,IAAIC,KAAQ,gBAelBC,EAbM,SAACd,GAAW,IAAD,EACRC,mBAASU,GADD,mBACvB3B,EADuB,KAClB+B,EADkB,OAERd,mBAAS,MAFD,mBAEzBN,EAFyB,KAEnBqB,EAFmB,KAI9B,OACE,cAACN,EAAYJ,SAAb,CAAsBC,MAAO,CAACvB,EAAK+B,GAAnC,SACE,cAACN,EAAaH,SAAd,CAAuBC,MAAO,CAACZ,EAAMqB,GAArC,SACGhB,EAAMQ,c,gBC4DAS,G,MAhEC,WACd,IAAMC,EAAUC,cADI,EAENC,qBAAWV,GAAlB1B,EAFa,sBAGMiB,mBAAS,IAHf,mBAGbP,EAHa,KAGN2B,EAHM,OAIMpB,mBAAS,IAJf,mBAIbqB,EAJa,KAINC,EAJM,OAKOtB,mBAAS,MAA3BuB,EALW,oBAMdhD,EAAO4C,qBAAWvB,GAkBxB,OACE,sBAAK4B,UAAU,mBAAf,UACE,+CACA,uBAAMC,YAAU,EAAhB,UACE,uBACEjC,GAAG,YACHkC,MAAM,aACNC,YAAY,aACZC,KAAK,YACLC,UAAQ,EACRvB,MAAOb,EACPqC,SApBa,SAACC,GACpBX,EAASW,EAAMC,OAAO1B,UAqBlB,0BACE2B,OAAO,SACPJ,UAAQ,EACRrC,GAAG,OACHkC,MAAM,OACNC,YAAY,OACZC,KAAK,OACLtB,MAAOe,EACPS,SA3Ba,SAACC,GACpBT,EAASS,EAAMC,OAAO1B,UA6BlB,wBACEkB,UAAU,SACVU,KAAK,SACLC,QA3Ce,SAACJ,IHiCH,SAACA,EAAOhF,EAAIwB,EAAMQ,EAAKU,EAAO4B,GACnDU,EAAMK,iBACNrF,EAAGkC,WAAW,SAASoD,IAAI,CACzBC,OAAQ/D,EAAKR,IACbwB,KAAMR,EACNU,MAAOA,EACPC,KAAM2B,EACN1B,QAAQ,IGvCR4C,CAAQR,EAAOhF,EAAIwB,EAAMQ,EAAKU,EAAO4B,GACrCD,EAAS,IACTE,EAAS,IACTC,EAAe3D,EAAa,uBAwCtB4E,UAAWnB,IAAU5B,EAJvB,sBAQA,wBAAQ+B,UAAU,qBAAqBW,QAnCtB,WACrBlB,EAAQwB,KAAK,MAkCT,0B,MCOOC,MAhEf,WACE,IAAMzB,EAAUC,cADE,EAEMC,qBAAWX,GAFjB,mBAEXd,EAFW,KAELqB,EAFK,OAGQf,mBAASN,EAAOA,EAAKD,MAAQ,IAHrC,mBAGXA,EAHW,KAGJ2B,EAHI,OAIQpB,mBAASN,EAAOA,EAAKA,KAAO,IAJpC,mBAIX2B,EAJW,KAIJC,EAJI,KA0BlB,OApBY,MAAR5B,GACFuB,EAAQwB,KAAK,SAmBR/C,EACL,sBAAK8B,UAAU,eAAf,UACE,6CACA,uBAAMC,YAAU,EAAhB,UACE,uBACEjC,GAAG,YACHkC,MAAM,aACNE,KAAK,YACLC,UAAQ,EACRc,aAAclD,EACdqC,SAnBa,SAACC,GACpBX,EAASW,EAAMC,OAAO1B,UAoBlB,0BACE2B,OAAO,SACPJ,UAAQ,EACRrC,GAAG,OACHkC,MAAM,OACNC,YAAY,OACZC,KAAK,OACLe,aAActB,EACdS,SA1Ba,SAACC,GACpBT,EAASS,EAAMC,OAAO1B,UA2BlB,wBACEkB,UAAU,SACVU,KAAK,SACLC,QAzCgB,SAACJ,IJ2CH,SAACA,EAAOhF,EAAI2C,EAAMD,EAAO4B,EAAON,GACtDgB,EAAMK,iBACNrF,EAAGkC,WAAW,SAAShB,IAAIyB,EAAKF,IAAIoD,OAAO,CAAEnD,MAAOA,EAAOC,KAAM2B,IAEjEtE,EAAGkC,WAAW,SACXhB,IAAIyB,EAAKF,IACTtB,MACA2E,MAAK,SAAC5E,GACDA,EAAIS,OACNqC,EAAQ,CACNxB,KAAMtB,EAAIc,IACVS,GAAIvB,EAAIuB,GACRC,MAAOxB,EAAIG,OAAOqB,MAClBC,KAAMzB,EAAIG,OAAOsB,OAGnBrB,QAAQyE,IAAI,wBI1DhBC,CAAShB,EAAOhF,EAAI2C,EAAMD,EAAO4B,EAAON,GACxCE,EAAQwB,KAAK,SACbrB,EAAS,IACTE,EAAS,IACT1D,EAAa,qBAqCP4E,UAAWnB,IAAU5B,EAJvB,0BAQA,wBAAQ+B,UAAU,SAASU,KAAK,SAASC,QAjCxB,WACrBlB,EAAQwB,KAAK,UAgCT,wBAKF,M,wBCxCSO,MAzBf,YAAyD,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBASnC,OACE,sBAAK1B,UAAU,gBAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,OAAOW,QANV,WAChBe,EAAgBC,YAAUF,EAAc,KAKpC,4BAIF,8BACE,+BAAOtC,YAAOsC,EAhBD,iBAkBf,qBAAKzB,UAAU,QAAQW,QAjBT,WAChBe,EAAgBE,YAAUH,EAAc,KAgBtC,SACE,qBAAKzB,UAAU,OAAf,iC,iEC0CO6B,MA5Df,YAAuC,IAAjBJ,EAAgB,EAAhBA,aAAgB,EACd9B,qBAAWV,GADG,mBAC7B1B,EAD6B,KACxB+B,EADwB,OAEId,mBAAS,IAAIY,MAFjB,mBAE7B0C,EAF6B,KAEfC,EAFe,KAmDpC,OA1CArD,qBAAU,WAJUsD,SAASC,cAAc,aAC7BC,eAAe,CAAEC,SAAU,aAKtC,IAEEC,YAAU,IAAIhD,KAAK7B,GAAMuE,IAAyB,OAARvE,GAC7CwE,EAAgB,IAAI3C,KAAK7B,IAsCzB,cAAC,IAAD,CACE8E,aAAa,EACbC,kBAAkB,EAClB1F,KAvCgB,WAiBlB,IAhBA,IAAM2F,EAAaC,YAAaf,GAC1BgB,EAAYD,YAAaD,GACzBG,EAAqBC,YAAQC,YAAenB,IAK9CoB,EAAO,GACPtF,EAAMkF,EACNK,EAAgB,GAVI,WAiBfC,GACPD,EAAgB3D,YAAO5B,EAbN,KAcjB,IAAMyF,EAAWzF,EACjBsF,EAAK5B,KACH,sBACEjB,UAAS,cAASoC,YAAU7E,EAAKuE,GAAgB,WAAa,IAE9DnB,QAAS,kBAZK,SAACpD,GACnBwE,EAAgBxE,GAChB+B,EAAOH,YAAO5B,EAAK,iBAUA0F,CAAYD,IAH7B,UAKE,sBAAMhD,UAAU,SAAhB,SAA0B8C,IAC1B,qBAAK9C,UAAU,OAAf,SAAuBb,YAAO5B,EArBlB,WAiBPA,IAOTA,EAAM2F,YAAQ3F,EAAK,IAbZwF,EAAI,EAAGA,EAAIL,EAAoBK,IAAM,IAe9C,OAAOF,EAOCM,GACNC,WAAW,K,MC3CFC,MAbf,WAAqB,IAAD,EACsB7E,mBAAS,IAAIY,MADnC,mBACXqC,EADW,KACGC,EADH,KAGlB,OACE,sBAAK1B,UAAU,WAAf,UACE,cAAC,EAAD,CACEyB,aAAcA,EACdC,gBAAiBA,IAEnB,cAAC,EAAD,CAAYD,aAAcA,QC+EjB6B,G,MAtFE,WAAO,IAAD,EACP3D,qBAAWV,GAAlB1B,EADc,sBAEKiB,mBAAS,IAFd,mBAEd+E,EAFc,KAEP/F,EAFO,OAGDmC,qBAAWX,GAAtBO,EAHY,oBAIfxC,EAAO4C,qBAAWvB,GAExBM,qBAAU,WACRpB,EAAMhC,EAAWyB,EAAMQ,EAAKC,KAC3B,CAACD,IAEJ,IAAMiG,EAAoB,SAACtF,IRuFA,SAACA,EAAM3C,GAClCA,EAAGkC,WAAW,SAAShB,IAAIyB,EAAKF,IAAIoD,OAAO,CACzCjD,QAASD,EAAKC,SQxFdsF,CAAcvF,EAAM3C,IAGtB,OACE,mCACGgI,EAAMG,OAAS,EACd,qBAAK1D,UAAU,oBAAf,SACE,qBAAKA,UAAU,YAAf,SACGuD,EAAMzF,KAAI,SAACI,GACV,OACE,mCACE,sBAAK8B,UAAU,OAAf,UACE,qBAAKA,UAAU,iBAAf,UACmB,IAAhB9B,EAAKC,OACJ,mCACE,qBACE6B,UAAU,wBACVW,QAAS,WACP6C,EAAkBtF,IAHtB,sCAUF,mCACE,qBACE8B,UAAU,sBACVW,QAAS,WACP6C,EAAkBtF,IAHtB,+BAWW,IAAhBA,EAAKC,OACJ,cAAC,IAAD,CACE6B,UAAU,YAEV2D,GAAG,QACHhD,QAAS,WACPpB,EAAQrB,IALZ,SAQGA,EAAKD,OANDC,EAAKF,IASZ,cAAC,IAAD,CACEgC,UAAU,2BAEV2D,GAAG,QACHhD,QAAS,WACPpB,EAAQrB,IALZ,SAQGA,EAAKD,OANDC,EAAKF,gBAgB1B,qBAAKgC,UAAU,aAAf,SACE,0D,8BCtDK4D,MA3Bf,WACE,IAAMnE,EAAUC,cADQ,EAEElB,mBAAS,MAA1BqF,EAFe,oBAGxB,OACE,sBAAK7D,UAAU,mBAAf,UACE,yBACEA,UAAU,SACVW,QAAS,WACPlB,EAAQwB,KAAK,gBAHjB,UAME,mBAAGjB,UAAU,OAAb,wBANF,qBAQA,yBACEA,UAAU,kBACVW,QAAS,WACPtF,EAAKyI,UAAUzC,MAAK,WAClBwC,EAAczH,EAAa,4BAJjC,UAQE,mBAAG4D,UAAU,OAAb,oBARF,kBCES+D,MAff,WACE,OACE,mCACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,c,MC2CGC,MAlDf,WACE,IAAM3E,EAAUC,cADF,EAECC,qBAAWX,GAAnBd,EAFO,oBAIRmG,EAAoB,SAACrG,IXoGH,SAACA,GACzB1C,EACGmC,WAAW,SACXhB,IAAIuB,GACJsG,SACAjD,MAAK,WACJjF,EAAa,wBWzGfmI,CAAWvG,GACXwG,KAGU,MAARtG,GACFsG,IAEF,IAAMA,EAAiB,WACrB/E,EAAQwB,KAAK,MAKf,OAAO/C,EACL,qCACE,qBAAK8B,UAAU,sBAAf,SACI9B,EAAKC,OAGL,qBAAK6B,UAAU,sBAAf,2BAFA,qBAAKA,UAAU,wBAAf,sCAKJ,sBAAKA,UAAU,eAAf,UACE,6BAAK9B,EAAKD,QACV,0BAAUwG,KAAK,IAAIzD,UAAQ,EAAClC,MAAOZ,EAAKA,OAExC,wBAAQ8B,UAAU,SAASW,QAhBV,WACrBlB,EAAQwB,KAAK,eAeT,uBAGA,wBACEjB,UAAU,SACVW,QAAS,WACP0D,EAAkBnG,EAAKF,KAH3B,yBAQA,wBAAQgC,UAAU,SAASU,KAAK,SAASC,QAAS6D,EAAlD,wBAKF,MClCSE,MAbf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,aAAaC,UAAW1D,IACpC,cAAC,IAAD,CAAOyD,KAAK,QAAQC,UAAWR,IAC/B,cAAC,IAAD,CAAOO,KAAK,eAAeC,UAAWpF,IAEtC,cAAC,IAAD,CAAOmF,KAAK,IAAIC,UAAWb,UCiCpBc,GA5CO,WAAO,IAAD,EACArG,mBAAS,IADT,mBACnBrB,EADmB,KACZ2H,EADY,KAc1B,OACE,qBAAK9E,UAAU,eAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,OAAf,uBACA,qDACA,gCACE,uBAAMA,UAAU,OAAhB,UACE,uBACEU,KAAK,QACLN,KAAK,YACLpC,GAAG,YACHc,MAAO3B,EACPgD,YAAY,mBACZG,SAxBY,SAACC,GAAW,IAAD,EACTA,EAAMwE,cAAtB3E,EADyB,EACzBA,KAAMtB,EADmB,EACnBA,MAED,cAATsB,GACF0E,EAAShG,IAqBDkB,UAAU,UAEZ,wBAAQA,UAAU,kCAAkCW,QApBhC,SAACJ,IbwBH,SAACA,EAAOpD,GACpCoD,EAAMK,iBACNvF,EACG2J,uBAAuB7H,GACvBkE,MAAK,WACJjF,EAAa,2BAEd6I,OAAM,WACLzJ,EAAW,0Ba/Bb0J,CAAe3E,EAAOpD,GACtB2H,EAAS,KAkBD,qCAKF,cAAC,IAAD,CAAMnB,GAAG,IAAI3D,UAAU,OAAvB,kDChCJmF,I,MAAW,IAAIxK,IAASU,KAAK+J,oBAItBC,GAA0B,WACrC,IAHAhK,EAAKiK,gBAAgBH,IAKnB,MAAOxJ,GACPkB,QAAQlB,MAAM,+BAAgCA,KAcrC4J,GAAqC,uCAAG,WACnDhF,EACApD,EACAqI,EACApI,GAJmD,iBAAAZ,EAAA,6DAMnD+D,EAAMK,iBAN6C,kBAQ1BvF,EAAKoK,+BAA+BtI,EAAOqI,GARjB,gBAQzCzI,EARyC,EAQzCA,KACRD,EAAqBC,EAAM,CAAEK,gBAC7BhB,EAAa,6BACbA,EAAa,sBAXoC,kDAajDZ,EAAW,wBAbsC,0DAAH,4DCmDnCkK,GAvEA,WAAO,IAAD,EACOlH,mBAAS,IADhB,mBACZrB,EADY,KACL2H,EADK,OAEatG,mBAAS,IAFtB,mBAEZgH,EAFY,KAEFG,EAFE,KAGblG,EAAUC,cAEVkG,EAAkB,SAACrF,GAAW,IAAD,EACTA,EAAMwE,cAAtB3E,EADyB,EACzBA,KAAMtB,EADmB,EACnBA,MAED,cAATsB,EACF0E,EAAShG,GACS,iBAATsB,GACTuF,EAAY7G,IAUhB,OACE,mCACE,cAACkF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKlE,UAAU,eAAemE,GAAI,GAAlC,UACE,qBAAKnE,UAAU,OAAf,mBACA,yCACA,uBAAMA,UAAU,OAAhB,UACE,uBACEU,KAAK,QACLV,UAAU,QACVI,KAAK,YACLtB,MAAO3B,EACPgD,YAAY,QACZnC,GAAG,YACHsC,SAAU,SAACC,GAAD,OAAWqF,EAAgBrF,MAEvC,uBACEG,KAAK,WACLV,UAAU,QACVI,KAAK,eACLtB,MAAO0G,EACPrF,YAAY,WACZnC,GAAG,eACHsC,SAAU,SAACC,GAAD,OAAWqF,EAAgBrF,MAEvC,cAAC,IAAD,CAAMoD,GAAG,iBAAiB3D,UAAU,OAApC,8BAGA,wBAAQA,UAAU,wBAAwBW,QApC5B,SAACJ,IDLoB,SAACA,EAAOpD,EAAOqI,GAC9DjF,EAAMK,iBACNvF,EACGwK,2BAA2B1I,EAAOqI,GAClCnE,MAAK,WACJjF,EAAa,yBAEd6I,OAAM,WACLzJ,EAAW,2BCFbsK,CAAkCvF,EAAOpD,EAAOqI,IAmCtC,wBAIF,yBAAQxF,UAAU,uBAAuBW,QArChC,WACjB0E,KACA5F,EAAQwB,KAAK,MAmCL,UACG,IADH,yBAIA,uDACyB,IACvB,cAAC,IAAD,CAAM0C,GAAG,UAAU3D,UAAU,OAA7B,qBAEQ,iBCsBP+F,GArFA,WACb,IAAMtG,EAAUC,cADG,EAEOlB,mBAAS,IAFhB,mBAEZrB,EAFY,KAEL2H,EAFK,OAGatG,mBAAS,IAHtB,mBAGZgH,EAHY,KAGFG,EAHE,OAImBnH,mBAAS,IAJ5B,mBAIZpB,EAJY,KAIC4I,EAJD,KAMbJ,EAAkB,SAACrF,GAAW,IAAD,EACTA,EAAMwE,cAAtB3E,EADyB,EACzBA,KAAMtB,EADmB,EACnBA,MAED,cAATsB,EACF0E,EAAShG,GACS,iBAATsB,EACTuF,EAAY7G,GACM,gBAATsB,GACT4F,EAAelH,IAenB,OACE,mCACE,cAACkF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKlE,UAAU,eAAemE,GAAI,GAAlC,UACE,qBAAKnE,UAAU,OAAf,wBACA,yCACA,uBAAMA,UAAU,OAAhB,UACE,uBACEU,KAAK,OACLV,UAAU,QACVI,KAAK,cACLtB,MAAO1B,EACP+C,YAAY,YACZnC,GAAG,cACHsC,SAAUsF,IAEZ,uBACElF,KAAK,QACLV,UAAU,QACVI,KAAK,YACLtB,MAAO3B,EACPgD,YAAY,QACZnC,GAAG,YACHsC,SAAUsF,IAEZ,uBACElF,KAAK,WACLV,UAAU,QACVI,KAAK,eACLtB,MAAO0G,EACPrF,YAAY,WACZnC,GAAG,eACHsC,SAAUsF,IAEZ,wBAAQ5F,UAAU,wBAAwBW,QA/ChC,SAACJ,GACrBgF,GAAsChF,EAAOpD,EAAOqI,EAAUpI,GAC9D0H,EAAS,IACTa,EAAY,IACZK,EAAe,IACfvG,EAAQwB,KAAK,MA0CH,wBAIF,wBAAQN,QA5CC,WACjB0E,KACA5F,EAAQwB,KAAK,MA0CwBjB,UAAU,uBAAvC,iCAIA,yDAC2B,IACzB,cAAC,IAAD,CAAM2D,GAAG,IAAI3D,UAAU,OAAvB,0BAEQ,iBClEPiG,OAZf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOtB,KAAK,WAAWC,UAAWc,KAClC,cAAC,IAAD,CAAOf,KAAK,WAAWC,UAAWmB,KAClC,cAAC,IAAD,CAAOpB,KAAK,kBAAkBC,UAAWC,KACzC,cAAC,IAAD,CAAUqB,KAAK,IAAIvC,GAAG,mBCafwC,OAnBf,WAEE,OADaxG,qBAAWvB,GAEtB,qBAAK4B,UAAU,MAAf,SACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UAKN,qBAAKA,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,GAAD,SCJOoG,OATf,WACE,OACE,eAAC,EAAD,WACE,cAAC,IAAD,IACA,cAAC,GAAD,QCCSC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlF,MAAK,YAAkD,IAA/CmF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,GAAD,IAAS9E,SAAS+E,eAAe,SAEjDV,O","file":"static/js/main.24d1283f.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n// Initialize Firebase\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const db = firebaseApp.firestore();\r\n","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const errorToast = (text) => {\r\n  toast.error(text, {\r\n    position: 'top-right',\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n};\r\n\r\nexport const successToast = (text) => {\r\n  toast.success(text, {\r\n    position: 'top-right',\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n};\r\n","import { errorToast, successToast } from '@configs/toastConfig';\r\nimport { auth, firestore } from './firebase';\r\n\r\nconst getUserDocument = async (uid) => {\r\n  if (!uid) return null;\r\n  try {\r\n    const userDocument = await firestore.doc(`users/${uid}`).get();\r\n\r\n    return {\r\n      uid,\r\n      ...userDocument.data(),\r\n    };\r\n  } catch (error) {\r\n    console.error('Error fetching user', error);\r\n  }\r\n};\r\n\r\nexport const generateUserDocument = async (user, additionalData) => {\r\n  if (!user) return;\r\n\r\n  const userRef = firestore.doc(`users/${user.uid}`);\r\n  const snapshot = await userRef.get();\r\n\r\n  if (!snapshot.exists) {\r\n    const { email, displayName } = user;\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating user document', error);\r\n    }\r\n  }\r\n  return getUserDocument(user.uid);\r\n};\r\n\r\nexport const sendResetEmail = (event, email) => {\r\n  event.preventDefault();\r\n  auth\r\n    .sendPasswordResetEmail(email)\r\n    .then(() => {\r\n      successToast('Email has been sent!');\r\n    })\r\n    .catch(() => {\r\n      errorToast('Invalid credentials');\r\n    });\r\n};\r\n\r\nexport const addTodo = (event, db, user, day, title, input) => {\r\n  event.preventDefault();\r\n  db.collection('todos').add({\r\n    userId: user.uid,\r\n    date: day,\r\n    title: title,\r\n    todo: input,\r\n    status: false,\r\n  });\r\n};\r\n\r\nexport const editTodo = (event, db, todo, title, input, setTodo) => {\r\n  event.preventDefault();\r\n  db.collection('todos').doc(todo.id).update({ title: title, todo: input });\r\n\r\n  db.collection('todos')\r\n    .doc(todo.id)\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.exists) {\r\n        setTodo({\r\n          date: doc.day,\r\n          id: doc.id,\r\n          title: doc.data().title,\r\n          todo: doc.data().todo,\r\n        });\r\n      } else {\r\n        console.log('No such document!');\r\n      }\r\n    });\r\n};\r\n\r\nexport const unsub = (firestore, user, day, setTodos) => {\r\n  firestore\r\n    .collection('todos')\r\n    .where('userId', '==', user.uid)\r\n    .where('date', '==', day)\r\n    .onSnapshot((snapshot) => {\r\n      setTodos(\r\n        snapshot.docs.map((doc) => {\r\n          return {\r\n            date: day,\r\n            id: doc.id,\r\n            title: doc.data().title,\r\n            todo: doc.data().todo,\r\n            status: doc.data().status,\r\n          };\r\n        })\r\n      );\r\n    });\r\n  return () => {\r\n    unsub(firestore, user, day, setTodos);\r\n  };\r\n};\r\n\r\nexport const statusHandler = (todo, db) => {\r\n  db.collection('todos').doc(todo.id).update({\r\n    status: !todo.status,\r\n  });\r\n};\r\n\r\nexport const deleteTodo = (id) => {\r\n  firestore\r\n    .collection('todos')\r\n    .doc(id)\r\n    .delete()\r\n    .then(() => {\r\n      successToast('Task was deleted!');\r\n    });\r\n};\r\n","import React, { createContext, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { auth } from '@firebaseAlias/firebase';\r\nimport { generateUserDocument } from '@firebaseAlias/firebaseDBQueries';\r\n\r\nexport const UserContext = createContext({ user: null });\r\n\r\nconst UserProvider = (props) => {\r\n  const [user, setUser] = useState(null);\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(async (userAuth) => {\r\n      const user = await generateUserDocument(userAuth);\r\n      setUser(user);\r\n    });\r\n  }, []);\r\n  return <UserContext.Provider value={user}>{props.children}</UserContext.Provider>;\r\n};\r\n\r\nexport default UserProvider;\r\n","import React, { createContext, useState } from 'react'\r\nimport { format } from 'date-fns'\r\nexport const TodosContext = createContext()\r\nexport const DaysContext = createContext()\r\nconst today = format(new Date(), 'dd MMMM yyyy')\r\n\r\nconst DaysProvider = (props) => {\r\n  const [day, setDay] = useState(today)\r\n  let [todo, setTodo] = useState(null)\r\n\r\n  return (\r\n    <DaysContext.Provider value={[day, setDay]}>\r\n      <TodosContext.Provider value={[todo, setTodo]}>\r\n        {props.children}\r\n      </TodosContext.Provider>\r\n    </DaysContext.Provider>\r\n  )\r\n}\r\n\r\nexport default DaysProvider\r\n","import React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { successToast } from '@configs/toastConfig';\r\nimport { db } from '@firebaseAlias/firebase';\r\nimport { addTodo } from '@firebaseAlias/firebaseDBQueries';\r\nimport { DaysContext } from '@providers/DaysProvider';\r\nimport { UserContext } from '@providers/UserProvider';\r\nimport './AddToDo.scss';\r\n\r\nconst AddTodo = () => {\r\n  const history = useHistory();\r\n  const [day] = useContext(DaysContext);\r\n  const [title, setTitle] = useState('');\r\n  const [input, setInput] = useState('');\r\n  const [, setTodoCreated] = useState(null);\r\n  const user = useContext(UserContext);\r\n\r\n  const addTodoHandler = (event) => {\r\n    addTodo(event, db, user, day, title, input);\r\n    setTitle('');\r\n    setInput('');\r\n    setTodoCreated(successToast('Task was created!'));\r\n  };\r\n\r\n  const titleHandler = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n  const inputHandler = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n  const redirectToMain = () => {\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <div className=\"add-todo-wrapper\">\r\n      <h1>Create a Task</h1>\r\n      <form noValidate>\r\n        <input\r\n          id=\"todoTitle\"\r\n          label=\"ToDo Title\"\r\n          placeholder=\"ToDo Title\"\r\n          name=\"todoTitle\"\r\n          required\r\n          value={title}\r\n          onChange={titleHandler}\r\n        />\r\n        <textarea\r\n          margin=\"normal\"\r\n          required\r\n          id=\"todo\"\r\n          label=\"ToDo\"\r\n          placeholder=\"ToDo\"\r\n          name=\"todo\"\r\n          value={input}\r\n          onChange={inputHandler}\r\n        />\r\n\r\n        <button\r\n          className=\"button\"\r\n          type=\"submit\"\r\n          onClick={addTodoHandler}\r\n          disabled={!input || !title}\r\n        >\r\n          Add Todo\r\n        </button>\r\n        <button className=\"button back-button\" onClick={redirectToMain}>\r\n          Back\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import React, { useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { successToast } from '@configs/toastConfig';\r\nimport { db } from '@firebaseAlias/firebase';\r\nimport { editTodo } from '@firebaseAlias/firebaseDBQueries';\r\nimport { TodosContext } from '@providers/DaysProvider';\r\nimport './EditToDo.scss';\r\n\r\nfunction EditToDo() {\r\n  const history = useHistory();\r\n  const [todo, setTodo] = useContext(TodosContext);\r\n  const [title, setTitle] = useState(todo ? todo.title : '');\r\n  const [input, setInput] = useState(todo ? todo.todo : '');\r\n\r\n  if (todo == null) {\r\n    history.push('/todo');\r\n  }\r\n\r\n  const editTodoHandler = (event) => {\r\n    editTodo(event, db, todo, title, input, setTodo);\r\n    history.push('/todo');\r\n    setTitle('');\r\n    setInput('');\r\n    successToast('Task was updated');\r\n  };\r\n  const titleHandler = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n  const inputHandler = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n  const redirectToTodo = () => {\r\n    history.push('/todo');\r\n  };\r\n  return todo ? (\r\n    <div className=\"todo-wrapper\">\r\n      <h1>Edit a Task</h1>\r\n      <form noValidate>\r\n        <input\r\n          id=\"todoTitle\"\r\n          label=\"ToDo Title\"\r\n          name=\"todoTitle\"\r\n          required\r\n          defaultValue={title}\r\n          onChange={titleHandler}\r\n        />\r\n        <textarea\r\n          margin=\"normal\"\r\n          required\r\n          id=\"todo\"\r\n          label=\"ToDo\"\r\n          placeholder=\"ToDo\"\r\n          name=\"todo\"\r\n          defaultValue={input}\r\n          onChange={inputHandler}\r\n        />\r\n        <button\r\n          className=\"button\"\r\n          type=\"submit\"\r\n          onClick={editTodoHandler}\r\n          disabled={!input && !title}\r\n        >\r\n          Save Changes\r\n        </button>\r\n        <button className=\"button\" type=\"submit\" onClick={redirectToTodo}>\r\n          Back\r\n        </button>\r\n      </form>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default EditToDo;\r\n","import React from 'react'\r\nimport './MonthSwitch.scss'\r\nimport { format, addMonths, subMonths } from 'date-fns'\r\n\r\nfunction MonthSwitch({ currentMonth, setCurrentMonth }) {\r\n  const dateFormat = 'MMMM yyyy'\r\n  const nextMonth = () => {\r\n    setCurrentMonth(addMonths(currentMonth, 1))\r\n  }\r\n\r\n  const prevMonth = () => {\r\n    setCurrentMonth(subMonths(currentMonth, 1))\r\n  }\r\n  return (\r\n    <div className=\"month-wrapper\">\r\n      <div className=\"arrow\">\r\n        <div className=\"icon\" onClick={prevMonth}>\r\n          chevron_left\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <span>{format(currentMonth, dateFormat)}</span>\r\n      </div>\r\n      <div className=\"arrow\" onClick={nextMonth}>\r\n        <div className=\"icon\">chevron_right</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default MonthSwitch\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport './DateSwitch.scss';\r\nimport { format, addDays, startOfMonth, isSameDay, lastDayOfMonth, getDate } from 'date-fns';\r\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\r\nimport { DaysContext } from '@providers/DaysProvider';\r\n\r\nfunction DateSwitch({ currentMonth }) {\r\n  const [day, setDay] = useContext(DaysContext);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  const scrollToDate = () => {\r\n    let selectedDay = document.querySelector('.selected');\r\n    selectedDay.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return scrollToDate();\r\n  }, []);\r\n\r\n  if (!isSameDay(new Date(day), selectedDate) && day !== null) {\r\n    setSelectedDate(new Date(day));\r\n  }\r\n  const renderCells = () => {\r\n    const monthStart = startOfMonth(currentMonth);\r\n    const startDate = startOfMonth(monthStart);\r\n    const lastDayOfThisMonth = getDate(lastDayOfMonth(currentMonth));\r\n\r\n    const dateFormat = 'd';\r\n    const dayFormat = 'eee';\r\n\r\n    let days = [];\r\n    let day = startDate;\r\n    let formattedDate = '';\r\n\r\n    const onDateClick = (day) => {\r\n      setSelectedDate(day);\r\n      setDay(format(day, 'dd MMMM yyyy'));\r\n    };\r\n\r\n    for (let i = 0; i < lastDayOfThisMonth; i++) {\r\n      formattedDate = format(day, dateFormat);\r\n      const cloneDay = day;\r\n      days.push(\r\n        <div\r\n          className={`day ${isSameDay(day, selectedDate) ? 'selected' : ''}`}\r\n          key={day}\r\n          onClick={() => onDateClick(cloneDay)}\r\n        >\r\n          <span className=\"number\">{formattedDate}</span>\r\n          <div className=\"days\">{format(day, dayFormat)}</div>\r\n        </div>\r\n      );\r\n      day = addDays(day, 1);\r\n    }\r\n    return days;\r\n  };\r\n\r\n  return (\r\n    <ScrollMenu\r\n      alignCenter={false}\r\n      scrollToSelected={true}\r\n      data={renderCells()}\r\n      menuStyle={false}\r\n    />\r\n  );\r\n}\r\nexport default DateSwitch;\r\n","import React from 'react'\r\nimport MonthSwitch from './MonthSwitch/MonthSwitch'\r\nimport DateSwitch from './DateSwitch/DateSwitch'\r\nimport './Calendar.scss'\r\nimport { useState } from 'react'\r\n\r\nfunction Calendar() {\r\n  const [currentMonth, setCurrentMonth] = useState(new Date())\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <MonthSwitch\r\n        currentMonth={currentMonth}\r\n        setCurrentMonth={setCurrentMonth}\r\n      />\r\n      <DateSwitch currentMonth={currentMonth} />\r\n    </div>\r\n  )\r\n}\r\nexport default Calendar\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport './ToDoList.scss';\r\nimport { db, firestore } from '@firebaseAlias/firebase';\r\nimport { Link } from 'react-router-dom';\r\nimport { DaysContext, TodosContext } from '@providers/DaysProvider';\r\nimport { UserContext } from '@providers/UserProvider';\r\nimport { unsub, statusHandler } from '@firebaseAlias/firebaseDBQueries';\r\n\r\nconst ListTodo = () => {\r\n  const [day] = useContext(DaysContext);\r\n  const [todos, setTodos] = useState([]);\r\n  const [, setTodo] = useContext(TodosContext);\r\n  const user = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    unsub(firestore, user, day, setTodos);\r\n  }, [day]);\r\n\r\n  const todoStatusHandler = (todo) => {\r\n    statusHandler(todo, db);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {todos.length > 0 ? (\r\n        <div className=\"todo-list-wrapper\">\r\n          <div className=\"todo-list\">\r\n            {todos.map((todo) => {\r\n              return (\r\n                <>\r\n                  <div className=\"todo\">\r\n                    <div className=\"status-wrapper\">\r\n                      {todo.status === false ? (\r\n                        <>\r\n                          <div\r\n                            className=\"icon status-unchecked\"\r\n                            onClick={() => {\r\n                              todoStatusHandler(todo);\r\n                            }}\r\n                          >\r\n                            radio_button_unchecked\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div\r\n                            className=\"icon status-checked\"\r\n                            onClick={() => {\r\n                              todoStatusHandler(todo);\r\n                            }}\r\n                          >\r\n                            check_circle\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                    {todo.status === false ? (\r\n                      <Link\r\n                        className=\"todo-link\"\r\n                        key={todo.id}\r\n                        to=\"/todo\"\r\n                        onClick={() => {\r\n                          setTodo(todo);\r\n                        }}\r\n                      >\r\n                        {todo.title}\r\n                      </Link>\r\n                    ) : (\r\n                      <Link\r\n                        className=\"todo-link todo-link-done\"\r\n                        key={todo.id}\r\n                        to=\"/todo\"\r\n                        onClick={() => {\r\n                          setTodo(todo);\r\n                        }}\r\n                      >\r\n                        {todo.title}\r\n                      </Link>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"empty-list\">\r\n          <h2>Task list is empty</h2>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListTodo;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { successToast } from '@configs/toastConfig';\r\nimport { auth } from '@firebaseAlias/firebase';\r\nimport './ToDoListFooter.scss';\r\n\r\nfunction ToDoListFooter() {\r\n  const history = useHistory();\r\n  const [, setIsLoggedIn] = useState(null);\r\n  return (\r\n    <div className=\"todo-list-footer\">\r\n      <button\r\n        className=\"button\"\r\n        onClick={() => {\r\n          history.push('create-todo');\r\n        }}\r\n      >\r\n        <p className=\"icon\">add_circle</p> Add a New Task\r\n      </button>\r\n      <button\r\n        className=\"button sign-out\"\r\n        onClick={() => {\r\n          auth.signOut().then(() => {\r\n            setIsLoggedIn(successToast('You are logged off!'));\r\n          });\r\n        }}\r\n      >\r\n        <p className=\"icon\">logout</p>\r\n        Sign out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default ToDoListFooter;\r\n","import React from 'react';\r\nimport Calendar from './Calendar/Calendar';\r\nimport ListTodo from './ToDoList/ToDoList';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport ToDoListFooter from './ToDoList/ToDoListFooter';\r\n\r\nfunction Main() {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Calendar />\r\n            <ListTodo />\r\n            <ToDoListFooter />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\nexport default Main;\r\n","import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { deleteTodo } from '@firebaseAlias/firebaseDBQueries';\r\nimport { TodosContext } from '@providers/DaysProvider';\r\nimport './ToDo.scss';\r\n\r\nfunction ToDo() {\r\n  const history = useHistory();\r\n  const [todo] = useContext(TodosContext);\r\n\r\n  const deleteTodoHandler = (id) => {\r\n    deleteTodo(id);\r\n    redirectToMain();\r\n  };\r\n\r\n  if (todo == null) {\r\n    redirectToMain();\r\n  }\r\n  const redirectToMain = () => {\r\n    history.push('/');\r\n  };\r\n  const redirectToEdit = () => {\r\n    history.push('/edit-todo');\r\n  };\r\n  return todo ? (\r\n    <>\r\n      <div className=\"status-wrapper-todo\">\r\n        {!todo.status ? (\r\n          <div className=\"icon status-unchecked\">radio_button_unchecked</div>\r\n        ) : (\r\n          <div className=\"icon status-checked\">check_circle </div>\r\n        )}\r\n      </div>\r\n      <div className=\"todo-wrapper\">\r\n        <h2>{todo.title}</h2>\r\n        <textarea rows=\"5\" disabled value={todo.todo} />\r\n\r\n        <button className=\"button\" onClick={redirectToEdit}>\r\n          Edit Task\r\n        </button>\r\n        <button\r\n          className=\"button\"\r\n          onClick={() => {\r\n            deleteTodoHandler(todo.id);\r\n          }}\r\n        >\r\n          Delete Task\r\n        </button>\r\n        <button className=\"button\" type=\"submit\" onClick={redirectToMain}>\r\n          Back\r\n        </button>\r\n      </div>\r\n    </>\r\n  ) : null;\r\n}\r\n\r\nexport default ToDo;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport AddTodo from '@modules/Todo/AddToDo/AddToDo';\r\nimport EditToDo from '@modules/Todo/EditToDo/EditToDo';\r\nimport Main from '@modules/Todo/Main/Main';\r\nimport ToDo from '@modules/Todo/ToDo/ToDo';\r\n\r\nfunction ToDoRouter() {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/edit-todo\" component={EditToDo} />\r\n        <Route path=\"/todo\" component={ToDo} />\r\n        <Route path=\"/create-todo\" component={AddTodo} />\r\n\r\n        <Route path=\"/\" component={Main} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\nexport default ToDoRouter;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { sendResetEmail } from '@firebaseAlias/firebaseDBQueries';\r\n\r\nconst PasswordReset = () => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  const onChangeHandler = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === 'userEmail') {\r\n      setEmail(value);\r\n    }\r\n  };\r\n  const sendResetEmailHandler = (event) => {\r\n    sendResetEmail(event, email);\r\n    setEmail('');\r\n  };\r\n  return (\r\n    <div className=\"auth-wrapper\">\r\n      <div className=\"container\">\r\n        <div className=\"icon\">autorenew</div>\r\n        <h1>Reset your Password</h1>\r\n        <div>\r\n          <form className=\"form\">\r\n            <input\r\n              type=\"email\"\r\n              name=\"userEmail\"\r\n              id=\"userEmail\"\r\n              value={email}\r\n              placeholder=\"Input your email\"\r\n              onChange={onChangeHandler}\r\n              className=\"input\"\r\n            />\r\n            <button className=\"button primary-button fp-button\" onClick={sendResetEmailHandler}>\r\n              Send me a reset link\r\n            </button>\r\n          </form>\r\n\r\n          <Link to=\"/\" className=\"link\">\r\n            &larr; back to sign in page\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport { errorToast, successToast } from '@configs/toastConfig';\r\nimport { auth } from './firebase';\r\nimport { generateUserDocument } from './firebaseDBQueries';\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const signInWithGoogle = () => {\r\n  auth.signInWithPopup(provider);\r\n};\r\nexport const signInWithGoogleHandler = () => {\r\n  try {\r\n    signInWithGoogle();\r\n  } catch (error) {\r\n    console.error('Error signing in with Google', error);\r\n  }\r\n};\r\nexport const signInWithEmailAndPasswordHandler = (event, email, password) => {\r\n  event.preventDefault();\r\n  auth\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then(() => {\r\n      successToast('You are logged in!');\r\n    })\r\n    .catch(() => {\r\n      errorToast('Invalid credentials!');\r\n    });\r\n};\r\nexport const createUserWithEmailAndPasswordHandler = async (\r\n  event,\r\n  email,\r\n  password,\r\n  displayName\r\n) => {\r\n  event.preventDefault();\r\n  try {\r\n    const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n    generateUserDocument(user, { displayName });\r\n    successToast('Account has been created!');\r\n    successToast('You are logged in!');\r\n  } catch (error) {\r\n    errorToast('Invalid credentials!');\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport '@modules/Auth/Auth.scss';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {\r\n  signInWithEmailAndPasswordHandler,\r\n  signInWithGoogleHandler,\r\n} from '@firebaseAlias/firebaseAuthQueries';\r\n\r\nconst SignIn = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n\r\n  const onChangeHandler = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === 'userEmail') {\r\n      setEmail(value);\r\n    } else if (name === 'userPassword') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const emailPasswordAuth = (event) => {\r\n    signInWithEmailAndPasswordHandler(event, email, password);\r\n  };\r\n  const googleAuth = () => {\r\n    signInWithGoogleHandler();\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"auth-wrapper\" xs={12}>\r\n            <div className=\"icon\">login</div>\r\n            <h1>Sign In</h1>\r\n            <form className=\"form\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"input\"\r\n                name=\"userEmail\"\r\n                value={email}\r\n                placeholder=\"Email\"\r\n                id=\"userEmail\"\r\n                onChange={(event) => onChangeHandler(event)}\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                className=\"input\"\r\n                name=\"userPassword\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                id=\"userPassword\"\r\n                onChange={(event) => onChangeHandler(event)}\r\n              />\r\n              <Link to=\"password-reset\" className=\"link\">\r\n                Forgot Password?\r\n              </Link>\r\n              <button className=\"button primary-button\" onClick={emailPasswordAuth}>\r\n                Sign In\r\n              </button>\r\n            </form>\r\n            <button className=\"button google-button\" onClick={googleAuth}>\r\n              {' '}\r\n              Sign in with Google\r\n            </button>\r\n            <p>\r\n              Don`t have an account?{' '}\r\n              <Link to=\"sign-up\" className=\"link\">\r\n                Sign up\r\n              </Link>{' '}\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useState } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport {\r\n  createUserWithEmailAndPasswordHandler,\r\n  signInWithGoogleHandler,\r\n} from '@firebaseAlias/firebaseAuthQueries';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst SignUp = () => {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [displayName, setDisplayName] = useState('');\r\n\r\n  const onChangeHandler = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === 'userEmail') {\r\n      setEmail(value);\r\n    } else if (name === 'userPassword') {\r\n      setPassword(value);\r\n    } else if (name === 'displayName') {\r\n      setDisplayName(value);\r\n    }\r\n  };\r\n  const signUpHandler = (event) => {\r\n    createUserWithEmailAndPasswordHandler(event, email, password, displayName);\r\n    setEmail('');\r\n    setPassword('');\r\n    setDisplayName('');\r\n    history.push('/');\r\n  };\r\n  const googleAuth = () => {\r\n    signInWithGoogleHandler();\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"auth-wrapper\" xs={12}>\r\n            <div className=\"icon\">how_to_reg</div>\r\n            <h1>Sign Up</h1>\r\n            <form className=\"form\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                name=\"displayName\"\r\n                value={displayName}\r\n                placeholder=\"Your Name\"\r\n                id=\"displayName\"\r\n                onChange={onChangeHandler}\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                className=\"input\"\r\n                name=\"userEmail\"\r\n                value={email}\r\n                placeholder=\"Email\"\r\n                id=\"userEmail\"\r\n                onChange={onChangeHandler}\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                className=\"input\"\r\n                name=\"userPassword\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                id=\"userPassword\"\r\n                onChange={onChangeHandler}\r\n              />\r\n              <button className=\"button primary-button\" onClick={signUpHandler}>\r\n                Sign Up\r\n              </button>\r\n            </form>\r\n            <button onClick={googleAuth} className=\"button google-button\">\r\n              Sign In with Google\r\n            </button>\r\n\r\n            <p>\r\n              Already have an account?{' '}\r\n              <Link to=\"/\" className=\"link\">\r\n                Sign in here\r\n              </Link>{' '}\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport PasswordReset from '@modules/Auth/PasswordReset/PasswordReset';\r\nimport SignIn from '@modules/Auth/SignIn/SignIn';\r\nimport SignUp from '@modules/Auth/SignUp/SignUp';\r\n\r\nfunction AuthRouter() {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/sign-in\" component={SignIn} />\r\n        <Route path=\"/sign-up\" component={SignUp} />\r\n        <Route path=\"/password-reset\" component={PasswordReset} />\r\n        <Redirect from=\"/\" to=\"/sign-in\" />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\nexport default AuthRouter;\r\n","import React, { useContext } from 'react';\r\nimport { UserContext } from '@providers/UserProvider';\r\nimport DaysProvider from '@providers/DaysProvider';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport ToDoRouter from './ToDoRouter';\r\nimport AuthRouter from './AuthRouter';\r\n\r\nfunction Routes() {\r\n  const user = useContext(UserContext);\r\n  return user ? (\r\n    <div className=\"App\">\r\n      <DaysProvider>\r\n        <Router>\r\n          <ToDoRouter />\r\n        </Router>\r\n      </DaysProvider>\r\n    </div>\r\n  ) : (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <AuthRouter />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport UserProvider from '@providers/UserProvider';\r\nimport Routes from '@routes/Routes';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nfunction App() {\r\n  return (\r\n    <UserProvider>\r\n      <ToastContainer />\r\n      <Routes />\r\n    </UserProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}